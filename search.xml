<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Oracle导入时IMP-00019 IMP-00003 ORA-00001错误]]></title>
      <url>/2017/12/04/imporacleerror/</url>
      <content type="html"><![CDATA[<p>今天在使用导入Oracle数据的时候，出现了IMP-00019 IMP-00003 ORA-00001错误。<br>后来经过查询网络，了解了问题所在。因为表之间有关联，所有需要先删除原有的表和数据。<br>所有删除已经存在的表，再用imp导入，就顺利导入了。</p>
<p>说明之前只要建立表空间和用户就可以了，建表的sql可以不去跑，反正建好后也要删。<br>备份恢复的事不是天天干，时间长就忘了。。。</p>
]]></content>
      
        
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> 错误 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何去备份hexo博客]]></title>
      <url>/2017/11/30/howtobackupblog/</url>
      <content type="html"><![CDATA[<h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><p>博客搭建好后，在git里面的只有静态文件，没有.md源文件。所以不备份的话，以后换电脑或者换个环境是个问题。通用的方法是使用git分支来备份源文件。<br>以下是步骤：</p>
<ul>
<li><p>1.在git上创建一个分支取名hexo，这个取名可以随意的。</p>
</li>
<li><p>2.设置hexo为默认分支。</p>
</li>
<li><p>3.在本地新建个文件夹，将hexo仓库clone至本地，将之前源文件夹中的内容复制到此目录，即username.github.io，public目录可以不用复制，因为它是生成的静态文件;</p>
</li>
<li><p>4.如果之前的目录内，如主题等，里面有.git，要将其删除掉，否则无法push。</p>
</li>
<li><p>5.在username.github.io目录下，执行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install</div><div class="line">npm install hexo-deployer-git</div></pre></td></tr></table></figure>
</li>
<li><p>6.执行提交源文件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git commit -m &quot;文件提交&quot;</div><div class="line">git push origin hexo</div></pre></td></tr></table></figure>
</li>
<li><p>7.生成静态文件部署到git上。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="发布、修改"><a href="#发布、修改" class="headerlink" title="发布、修改"></a>发布、修改</h2><p>以后在本地username.github.io内对博客内容进行修改后，做以下两步即可：</p>
<ul>
<li><p>1.备份源文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git commit -m &quot;文件提交、修改&quot;</div><div class="line">git push //如果不放心，可以指定git push origin hexo</div></pre></td></tr></table></figure>
</li>
<li><p>2.生成静态网页并部署</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g -d</div></pre></td></tr></table></figure>
</li>
</ul>
<p>以后重复这两步即可。</p>
<h2 id="从备份恢复"><a href="#从备份恢复" class="headerlink" title="从备份恢复"></a>从备份恢复</h2><ul>
<li>1.目标电脑安装git</li>
<li>2.安装node.js和npm</li>
<li>3.将仓库从git克隆之本地</li>
<li>4.执行命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">npm install hexo-cli -g</div><div class="line">npm install</div><div class="line">npm install hexo-deployer-git</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>Hexo的源文件说明：<br>1、<em>_config.yml</em>站点的配置文件，需要拷贝；<br>2、<em>themes/</em>主题文件夹，需要拷贝；<br>3、<em>source</em>博客文章的.md文件，需要拷贝；<br>4、<em>scaffolds/</em>文章的模板，需要拷贝；<br>5、<em>package.json</em>安装包的名称，需要拷贝；<br>6、<em>.gitignore</em>限定在push时哪些文件可以忽略，需要拷贝；<br>7、<em>.git/</em>主题和站点都有，表示这是一个git项目，不需要拷贝；<br>8、<em>node_modules/</em>是安装包的目录，在执行npm install的时候会重新生成，不需要拷贝；<br>9、<em>public</em>是hexo g生成的静态网页，不需要拷贝；<br>10、<em>.deploy_git</em>同上，hexo g也会生成，不需要拷贝；<br>11、<em>db.json</em>文件，不需要拷贝。</p>
<h2 id="hexo命令补充说明"><a href="#hexo命令补充说明" class="headerlink" title="hexo命令补充说明"></a>hexo命令补充说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成静态页面至public目录</div><div class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy #将.deploy目录部署到GitHub</div><div class="line">hexo help  # 查看帮助</div><div class="line">hexo version  #查看Hexo的版本</div><div class="line">hexo deploy -g  #生成加部署</div><div class="line">hexo server -g  #生成加预览</div><div class="line">命令的简写</div><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.jianshu.com/p/baab04284923" target="_blank" rel="external">怎么去备份你的hexo博客</a></p>
<p><a href="http://www.jianshu.com/p/a2fe56d11c4f" target="_blank" rel="external">搭建Hexo博客中碰到的坑</a></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 备份 </tag>
            
            <tag> hexo命令 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[启动Mac终端提示-bash .profile No such file or directory错误]]></title>
      <url>/2017/11/29/profileMissingInMac/</url>
      <content type="html"><![CDATA[<h2 id="1-进入用户目录"><a href="#1-进入用户目录" class="headerlink" title="1.进入用户目录"></a>1.进入用户目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd ~</div></pre></td></tr></table></figure>
<h2 id="2-创建-profile"><a href="#2-创建-profile" class="headerlink" title="2.创建.profile"></a>2.创建.profile</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">touch .profile</div></pre></td></tr></table></figure>
<h2 id="3-重启终端"><a href="#3-重启终端" class="headerlink" title="3.重启终端"></a>3.重启终端</h2>]]></content>
      
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 终端 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MacOs系统下使用VSCode对Cpp进行debug]]></title>
      <url>/2017/11/29/UsingVsCodeDebugCppInMacOs/</url>
      <content type="html"><![CDATA[<h2 id="1-下载安装VSCode"><a href="#1-下载安装VSCode" class="headerlink" title="1.下载安装VSCode"></a>1.下载安装<strong>VSCode</strong></h2><h2 id="2-安装cpptools"><a href="#2-安装cpptools" class="headerlink" title="2.安装cpptools"></a>2.安装cpptools</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cpptools</div></pre></td></tr></table></figure>
<h2 id="3-安装clang"><a href="#3-安装clang" class="headerlink" title="3.安装clang++"></a>3.安装clang++</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">clang++</div></pre></td></tr></table></figure>
<h2 id="4-Comd-Q-退出VSCode，重新打开VSCode。"><a href="#4-Comd-Q-退出VSCode，重新打开VSCode。" class="headerlink" title="4.Comd+Q,退出VSCode，重新打开VSCode。"></a>4.Comd+Q,退出VSCode，重新打开VSCode。</h2><h2 id="5-生成c-cpp-properties-json"><a href="#5-生成c-cpp-properties-json" class="headerlink" title="5.生成c_cpp_properties.json"></a>5.生成c_cpp_properties.json</h2><p>按fn+F1调出命令行模式，选择[C/Cpp: Edit Configurations]，会自动生成c_cpp_properties.json，在mac节点中，会自动选择xcode自带的相关include和lib等路径【所以，事先要安装好xcode】。</p>
<h2 id="6-生成一个tasks-json"><a href="#6-生成一个tasks-json" class="headerlink" title="6.生成一个tasks.json"></a>6.生成一个tasks.json</h2><p>调出命令行，选择[Tasks: Configure Task]，生成一个tasks.json。内容参考如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    // See https://go.microsoft.com/fwlink/?LinkId=733558</div><div class="line">    // <span class="keyword">for</span> the documentation about the tasks.json format</div><div class="line">    <span class="string">"version"</span>: <span class="string">"0.1.0"</span>,</div><div class="line">    <span class="string">"command"</span>: <span class="string">"clang++"</span>, //使用clang++编译Cpp文件，如果你使用C开发，改成clang</div><div class="line">    <span class="string">"isShellCommand"</span>: <span class="literal">true</span>,</div><div class="line">    <span class="string">"args"</span>: [<span class="string">"test.cpp"</span>, <span class="string">"-g"</span>],//如果使用的是C，则改成test.c或者相对应的c入口文件。如果需要支持C++11，添加<span class="string">"-std=c++11"</span></div><div class="line">    <span class="string">"showOutput"</span>: <span class="string">"always"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="7-生成launch-json"><a href="#7-生成launch-json" class="headerlink" title="7.生成launch.json"></a>7.生成launch.json</h2><p>进入命令行，选择[Debug: Open launch.json]，内容参考如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">        <span class="string">"version"</span>: <span class="string">"0.2.0"</span>,</div><div class="line">        <span class="string">"configurations"</span>: [</div><div class="line">            &#123;</div><div class="line">                <span class="string">"name"</span>: <span class="string">"C++ Launch (GDB)"</span>,</div><div class="line">                <span class="string">"type"</span>: <span class="string">"cppdbg"</span>,</div><div class="line">                <span class="string">"request"</span>: <span class="string">"launch"</span>,</div><div class="line">                <span class="string">"targetArchitecture"</span>: <span class="string">"x86_64"</span>,</div><div class="line">                <span class="string">"program"</span>: <span class="string">"<span class="variable">$&#123;workspaceRoot&#125;</span>/a.out"</span>,</div><div class="line">                <span class="string">"args"</span>: [],</div><div class="line">                <span class="string">"stopAtEntry"</span>: <span class="literal">false</span>,</div><div class="line">                <span class="string">"cwd"</span>: <span class="string">"<span class="variable">$&#123;workspaceRoot&#125;</span>"</span>,</div><div class="line">                <span class="string">"environment"</span>: [],</div><div class="line">                <span class="string">"externalConsole"</span>: <span class="literal">true</span>,</div><div class="line">                <span class="string">"MIMode"</span>: <span class="string">"lldb"</span>,</div><div class="line">                <span class="string">"preLaunchTask"</span>: <span class="string">"clang++"</span> //如果使用的是C，改为clang</div><div class="line">            &#125;</div><div class="line">        ]</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<h2 id="8-测试，编写一个test-cpp"><a href="#8-测试，编写一个test-cpp" class="headerlink" title="8.测试，编写一个test.cpp"></a>8.测试，编写一个test.cpp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#include &lt;iostream&gt;</span></div><div class="line">using namespace std;</div><div class="line">int main(void)</div><div class="line">&#123;</div><div class="line">    cout&lt;&lt;<span class="string">"Hello World!"</span>&lt;&lt;endl;</div><div class="line">    <span class="built_in">return</span> 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用shift+command+b，编译生成a.out。<br>Fn+F5进行debug调试。可以设断点，单步调试。</p>
<p>最后，调试时，VSCode会挡住终端窗口，害的我以为在VsCode里面的输出里面看结果。</p>
]]></content>
      
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> VSCode </tag>
            
            <tag> C++ </tag>
            
            <tag> debug </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于hexo的一些]]></title>
      <url>/2017/11/29/%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E4%B8%80%E4%BA%9B/</url>
      <content type="html"><![CDATA[<p><strong>Hexo</strong>，真的很不错。</p>
<p>用hexo和github很早就建了一个个人博客，但是一直没有怎么用。</p>
<p>这两天捡起来，又做了些配置和调整。遇到一些问题，一个个解决了。</p>
<ul>
<li>1.发布后，遇到404问题。原因是将整个项目提交至git了，而不是public目录。</li>
<li>2.学着发了个图片试试。发图片可以选择本地方式和外链方式。两个方式都试了，比较了一下，还是选择把图片存在了七牛云上这种外链方式。</li>
<li>3.主题从hack更换为NexT</li>
<li>4.将标签和分类启用。</li>
<li>5.上传了一个avatar头像。</li>
</ul>
<p>还有很多地方需要花点时间了解。记录于此。</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hexo用的很不熟]]></title>
      <url>/2017/11/28/hexo%E7%94%A8%E7%9A%84%E5%BE%88%E4%B8%8D%E7%86%9F/</url>
      <content type="html"><![CDATA[<p>hexo用的很不熟。</p>
<p>今天抽空复习了一下md文件的写法。</p>
<p>有时间再去<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="external">hexo中文官网</a>去看看文档，学学如何使用hexo。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[错误]]></title>
      <url>/2017/11/28/%E9%94%99%E8%AF%AF/</url>
      <content type="html"><![CDATA[<h1 id="Github-Pages-404-错误"><a href="#Github-Pages-404-错误" class="headerlink" title="Github Pages 404 错误"></a>Github Pages 404 错误</h1><p>有一阵子没用hexo了，今天重新用发布的时候出现了<strong>404错误</strong>。提示找不到<strong>index.html</strong>文件。</p>
<p>一阵小紧张。</p>
<p>忘了太久了。</p>
<p>看了网上一些问题，提示虽然也是404，但是和我的情况不一样。我的是<strong>之前一直能访问的</strong>，反而发布了一个新的post后，就提示404了。</p>
<p>排查了好一会儿，发现了问题了。</p>
<p>因为刚才发布的时候有点问题，所以我用<strong>git init</strong>命令在本地的username.github.io目录下运行了一下，但是其实应该在其子目录public下运行才对。所有deploy的时候，它把父目录全部提交了，所以找不到index.html文件了。验证的方法很简单，就是在网址后面加上/public试试看。找到问题就简单了，删除错误的.git目录和.deloy_git目录。在public目录下再重新<strong>git init</strong>下。再次deploy，成功了。网站正常打开。</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 404 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac远程Win失败]]></title>
      <url>/2016/09/18/Mac%E8%BF%9C%E7%A8%8BWin10%E5%A4%B1%E8%B4%A5/</url>
      <content type="html"><![CDATA[<p>Mac远程Win10失败，提示：远程桌面连接无法验证您希望连接的计算机的身份</p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><ul>
<li><p>1.Enable RDP security layer in Group Policy on the machine.</p>
</li>
<li><p>2.Verify that the firewall allows remote desktop connections with RDP (Port 3389)</p>
</li>
<li>3.Click Start&gt;Run，Type gpedit.msc and click “OK”, The Group Policy Editor will open.</li>
<li>4,In the left hand side bar, expand Computer Configuration&gt;Administrative Templates&gt;Windows Components&gt;Remote Desktop Services&gt;Remote Desktop Session Host.</li>
<li>5.Select “Security”,Change “Require use of specific security layer for remote desktop (RDP) connection” to Enabled” and select “RDP” in the Options pane.</li>
<li>6.Change “Require user authentication for remote connections by using Network Level,Authentication” to “Disabled.”</li>
<li>7.Close Group Policy Editor and reboot the machine for changes to take effect.</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 远程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[test!]]></title>
      <url>/2016/09/08/test/</url>
      <content type="html"><![CDATA[<p>#This is my first Post test.</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2016/09/08/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
